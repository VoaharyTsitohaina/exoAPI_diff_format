openapi: 3.0.3
info:
  title: STD23048 - TD2
  version: '1.0.3'
servers:
  - url: https://localhost.std23048.com
paths:
  /customers:
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: true
        - in: query
          name: pageSize
          schema:
            type: integer
          required: true
      responses:
        200:
          description: List of customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateCustomer'
        required: true
      responses:
        200:
          description: List of created customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    put:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Customer'
        required: true
      responses:
        200:
          description: List of updated customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    delete:
      requestBody:
        content:
  /customers/{customerId}/orders:
    get:
      summary: Get a list of orders for a specific customer
      parameters:
        - in: path
          name: customerId
          required: true
          schema:
            type: integer
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: pageSize
          schema:
            type: integer
      responses:
        200:
          description: List of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      summary: Create a new order for a specific customer
      parameters:
        - in: path
          name: customerId
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrder'
        required: true
      responses:
        201:
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
    put:
      summary: Update an order for a specific customer
      parameters:
        - in: path
          name: customerId
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        200:
          description: Order updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'

components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
      required:
        - id
        - name
    
    Meal:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the meal
        name:
          type: string
          description: Name of the meal
        price:
          type: number
          format: float
          description: Price of the meal
      required:
        - id
        - name
        - price

    CreateMeal:
      type: object
      properties:
        name:
          type: string
          description: Name of the meal
        price:
          type: number
          format: float
          description: Price of the meal
      required:
        - name
        - price
    
    Order:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the order
        reference:
          type: string
          description: Unique order reference number
        meals:
          type: array
          items:
            type: object
            properties:
              meal:
                $ref: '#/components/schemas/Meal'
              quantity:
                type: integer
                description: Quantity of the meal ordered
        orderDatetime:
          type: string
          format: date-time
          description: The date and time when the order was placed
      required:
        - id
        - reference
        - meals
        - orderDatetime

    CreateOrder:
      type: object
      properties:
        reference:
          type: string
          description: Unique order reference number
        meals:
          type: array
          items:
            type: object
            properties:
              mealId:
                type: integer
                description: ID of the meal being ordered
              quantity:
                type: integer
                description: Quantity of the meal being ordered
      required:
        - meals
